!function(){"use strict";const t="#008080",e="#f8f8f8";function n(t,e){const n=document.createElement("div");n.className="chatbot-header",n.style.backgroundColor=t,n.innerHTML=`\n    <h3 class="chatbot-header-title">${e}</h3>\n    <button class="chatbot-close-button">âœ•</button>\n  `;const o=function(){const t=document.createElement("div");return t.className="chatbot-cart-icon",t.innerHTML='\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <circle cx="9" cy="21" r="1"></circle>\n        <circle cx="20" cy="21" r="1"></circle>\n        <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>\n      </svg>\n      <span class="cart-count">0</span>\n    ',t}();return n.insertBefore(o,n.querySelector(".chatbot-close-button")),n}function o(e="Store Assistant"){const o=document.createElement("div");o.className="chat-page";const r=n(t,e);o.appendChild(r);const c=function(){const t=document.createElement("div");return t.className="message-list",t}();o.appendChild(c);const a=function(t){const e=document.createElement("div");return e.className="input-component",e.innerHTML='\n      <input type="text" class="input-box" placeholder="Type your message...">\n      <button class="send-button" disabled>Send</button>\n    ',e.querySelector(".send-button").style.backgroundColor=t,e}(t);return o.appendChild(a),o}function r(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}const c="https://api.ipify.org?format=json",a="https://ipapi.co",s="/apps/chatbot-api/deepseek";const i="chatbotSessionData",l="chatbotCartItems";function u(){try{const t=sessionStorage.getItem(i);return t?JSON.parse(t):{}}catch(t){return console.error("Failed to parse session data:",t),{}}}async function d(t){try{const e=(await async function(){try{const t=await fetch(c);return await t.json()}catch(t){return console.error("IP fetch failed:",t),{ip:"unknown"}}}()).ip||"unknown",n=await async function(t){if("unknown"===t)return{country:"unknown",city:"unknown"};try{const e=await fetch(`${a}/${t}/json/`),n=await e.json();return{country:n.country_name||"unknown",city:n.city||"unknown",region:n.region||"unknown"}}catch(t){return console.error("Location fetch failed:",t),{country:"unknown",city:"unknown"}}}(e),o={email:t,ip:e,country:n.country||"unknown",city:n.city||"unknown",region:n.region||"unknown",session_start:(new Date).toISOString(),interactions:0};if(!function(t){try{const e=JSON.stringify({...u(),...t});return sessionStorage.setItem(i,e),console.log("Session updated:",e),!0}catch(t){return console.error("Failed to update session:",t),!1}}(o))throw new Error("Failed to store session");return u()}catch(t){throw console.error("Session initialization failed:",t),t}}function p(){return!!u().email}function m(t,e){const n=document.createElement("div");return n.className="product-slider",t.slice(0,4).forEach((t=>{const o=function(t,e){const n=document.createElement("div");return n.className="product-card",n.innerHTML=`\n      <img src="${t.image}" class="product-image">\n      <div class="product-title">${t.title}</div>\n      <div class="product-price">${t.price}</div>\n      <a href="${t.url}" class="view-product-button">View</a>\n      <button class="add-to-cart-button">Add to Cart</button>\n    `,n.querySelector(".add-to-cart-button").style.backgroundColor=e,n}(t,e);n.appendChild(o)})),n}function h(t,e,n=[],o){const r=document.querySelector(".message-list");if(!r)return;const c=document.createElement("div");c.className="message-wrapper";const a=document.createElement("div");if(a.className=`message ${e}-message`,a.textContent=t,"user"===e&&(a.style.backgroundColor=o,a.style.borderColor=o),c.appendChild(a),"bot"===e&&n.length>0){const t=m(n,o);c.appendChild(t)}r.appendChild(c)}function y(){return window.Shopify?.shop||"default-shop-id"}function f(t){const e=document.querySelector(".input-box"),n=document.querySelector(".send-button"),o=async()=>{const n=e.value.trim();if(!n)return;h(n,"user",[],t),e.value="";const o=function(){const t=document.createElement("div");return t.className="typing-indicator",t.innerHTML="\n      <span></span>\n      <span></span>\n      <span></span>\n    ",t}();document.querySelector(".message-list").appendChild(o);try{const{answer:e,products:o}=await async function(t,e){const n=new Headers({"Content-Type":"application/json",Accept:"application/json"}),o=await fetch(s,{method:"POST",headers:n,body:JSON.stringify({messages:[{role:"user",content:t}],namespace:e})});if(!o.ok){const t=await o.json();throw new Error(t.message||"Failed to get bot response")}const r=await o.json();return{answer:r.answer,products:r.products||[]}}(n,y());h(e,"bot",o||[],t)}catch(e){console.error("Chat error:",e),h(e.message||"Sorry, something went wrong.","bot",[],t)}finally{o.remove(),e.focus()}};e.addEventListener("input",(()=>{n.disabled=""===e.value.trim()})),e.addEventListener("keypress",(t=>{"Enter"===t.key&&o()})),n.addEventListener("click",o),setTimeout((()=>{h("Hi there! How can I help you today?","bot",[],t)}),500)}let b=null,w=null;function g(){w||(w=function(){const t=document.createElement("div");return t.className="cart-drawer",t.innerHTML='\n      <div class="cart-drawer-header">\n        <h3 class="cart-drawer-title">Added to Cart</h3>\n        <button class="cart-drawer-close">Ã—</button>\n      </div>\n      <div class="cart-drawer-content"></div>\n      <a href="/checkout" class="checkout-button">Checkout</a>\n    ',t}(),document.body.appendChild(w),w.querySelector(".cart-drawer-close").addEventListener("click",k))}function v(){var t;g(),t=E(),g(),w.querySelector(".cart-drawer-content").innerHTML=0===t.length?"<p>Your cart is empty</p>":t.map((t=>function(t){const e=document.createElement("div");return e.className="cart-item",e.innerHTML=`\n      <img src="${t.image}" alt="${t.title}" class="cart-item-image">\n      <div class="cart-item-details">\n        <h4 class="cart-item-title">${t.title}</h4>\n        <p class="cart-item-price">${t.price}</p>\n        <div class="cart-item-actions">\n          <div class="quantity-selector">\n            <button class="quantity-btn">-</button>\n            <input type="text" class="quantity-input" value="${t.quantity}" readonly>\n            <button class="quantity-btn">+</button>\n          </div>\n        </div>\n      </div>\n    `,e}(t))).join(""),function(){const t=E().reduce(((t,e)=>t+e.quantity),0);document.querySelectorAll(".cart-count").forEach((e=>{e.textContent=t,e.style.display=t>0?"flex":"none"}))}()}function S(){g(),w.classList.add("open"),w.classList.remove("auto-close"),function(){b&&clearTimeout(b);b=setTimeout(k,5e3)}()}function k(){w&&(w.classList.remove("open"),w.classList.add("auto-close"))}function E(){try{return JSON.parse(localStorage.getItem(l))||[]}catch(t){return console.error("Error parsing cart items",t),[]}}let C=!1;async function L(){const e=await async function(){const e=y();try{const n=await fetch(`/apps/chatbot-api/supabase?shopId=${encodeURIComponent(e)}`);if(!n.ok)throw new Error("Failed to fetch color");return(await n.json()).color||t}catch(e){return console.error("Color fetch error:",e),t}}();return function(t){document.documentElement.style.setProperty("--primary-color",t),[".chatbot-toggle-button",".chatbot-header",".send-button",".start-chat-button",".add-to-cart-button"].forEach((e=>{document.querySelectorAll(e).forEach((e=>{e.style.backgroundColor=t}))})),document.querySelectorAll(".chatbot-window, .email-collection-screen").forEach((e=>{e.style.borderColor=t}))}(e),e}document.addEventListener("DOMContentLoaded",(async()=>{const n=document.getElementById("shopify-chatbot");if(!n)return void console.error("Chatbot container not found");n.style.setProperty("--primary-color",t),n.style.setProperty("--text-color",e);const c=await L(),a=function(t){const e=document.createElement("button");return e.className="chatbot-toggle-button",e.innerHTML="ðŸ’¬",e.style.backgroundColor=t,e}(c),s=o("Store Assistant"),l=function(e="Store Assistant"){const n=document.createElement("div");n.className="email-gate-page",n.innerHTML=`\n    <div class="chatbot-header" style="background-color: ${t}">\n      <h3 class="chatbot-header-title">${e}</h3>\n      <button class="chatbot-close-button">âœ•</button>\n    </div>\n    <div class="email-collection-content">\n      <p>Please enter your email to start chatting</p>\n      <input type="email" class="email-input" placeholder="Your email address" required>\n      <div class="error-message hidden">Please enter a valid email address</div>\n      <button class="start-chat-button" style="background-color: ${t}">Start Chat</button>\n    </div>\n  `;const o=n.querySelector(".email-input"),c=n.querySelector(".error-message"),a=n.querySelector(".start-chat-button"),s=n.querySelector(".chatbot-close-button");return a.addEventListener("click",(async()=>{const t=o.value.trim();if(!r(t))return c.classList.remove("hidden"),void o.focus();try{await d(t),n.classList.remove("open"),document.querySelector(".chatbot-window").classList.add("open"),document.querySelector(".input-box").focus()}catch(t){console.error("Session initialization failed:",t),c.textContent="Failed to start chat. Please try again.",c.classList.remove("hidden")}})),o.addEventListener("input",(()=>{r(o.value.trim())&&c.classList.add("hidden")})),s.addEventListener("click",(()=>{n.classList.remove("open")})),n}("Store Assistant");C||(v(),document.querySelectorAll(".chatbot-cart-icon").forEach((t=>{t.addEventListener("click",(t=>{t.stopPropagation(),S()}))})),C=!0),function(){const t=y();window.addEventListener("beforeunload",(()=>{const e=JSON.parse(sessionStorage.getItem(i));e&&navigator.sendBeacon(`/apps/chatbot-api/store-session?shopId=${encodeURIComponent(t)}`,JSON.stringify(e))}))}();const u=p()?s:l;n.appendChild(a),n.appendChild(u),p()&&f(c)}))}();
