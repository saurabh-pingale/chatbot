!function(){"use strict";const t="#008080",e="#f8f8f8",n="#333",o="https://api.ipify.org?format=json",a="https://ipapi.co",r="/apps/chatbot-api/deepseek";function c(t,e,n){const o=document.createElement("div");return o.className="product-slider",t.slice(0,4).forEach((t=>{const a=function(t,e){const n=document.createElement("div");n.className="product-card",n.innerHTML=`\n      <img src="${t.image}" class="product-image">\n      <div class="product-title">${t.title}</div>\n      <div class="product-price">${t.price}</div>\n      <a href="${t.url}" class="view-product-button">View</a>\n      <button class="add-to-cart-button">Add to Cart</button>\n    `;const o=n.querySelector(".add-to-cart-button");return o.style.backgroundColor=e,o.addEventListener("click",(e=>{e.preventDefault(),n.dispatchEvent(new CustomEvent("addToCart",{detail:t,bubbles:!0}))})),n}(t,e);a.addEventListener("addToCart",(t=>{t.stopPropagation(),n(t.detail)})),o.appendChild(a)})),o}const i="chatbotSessionData",s="chatbotCartItems";function d(){return window.Shopify?.shop||"default-shop-id"}function l(t){return t?"string"==typeof t&&t.startsWith("gid://shopify/ProductVariant/")?parseInt(t.split("/").pop(),10):parseInt(t,10)||null:null}let u=null,p=null,h=null;function m(){p||(p=function(){const t=document.createElement("div");return t.className="cart-drawer",t.innerHTML='\n      <div class="cart-drawer-header">\n        <h3 class="cart-drawer-title">Added to Cart</h3>\n        <button class="cart-drawer-close">Ã—</button>\n      </div>\n      <div class="cart-drawer-content"></div>\n      <button class="checkout-button">Checkout</button>\n    ',t.style.display="none",t}());const t=document.querySelector(".chat-page");t&&t!==h&&(p.parentNode&&p.parentNode.removeChild(p),t.appendChild(p),h=t,p.querySelector(".cart-drawer-close").addEventListener("click",v),p.querySelector(".checkout-button").addEventListener("click",(async t=>{t.preventDefault();const e=t.target,n=e.textContent;e.disabled=!0,e.textContent="Processing...";try{const t=b();await S(t)?window.location.href="/cart":alert("Failed to sync cart. Please try again.")}catch(t){console.error("Checkout error:",t),alert("An error occurred during checkout.")}finally{e.disabled=!1,e.textContent=n}})))}function y(){m(),g(b()),w()}function f(){m(),p.style.display="block",p.classList.add("open"),p.classList.remove("auto-close"),function(){u&&clearTimeout(u);u=setTimeout(v,5e3)}()}function v(){p&&(p.classList.remove("open"),p.classList.add("auto-close"))}function g(t){m();const e=p.querySelector(".cart-drawer-content");if(e.innerHTML="",0===t.length)return void(e.innerHTML="<p>Your cart is empty</p>");const n=document.createDocumentFragment();t.forEach((t=>{const e=function(t){const e=document.createElement("div");return e.className="cart-item",e.innerHTML=`\n      <img src="${t.image}" alt="${t.title}" class="cart-item-image">\n      <div class="cart-item-details">\n        <h4 class="cart-item-title">${t.title}</h4>\n        <p class="cart-item-price">${t.price}</p>\n        <div class="cart-item-actions">\n          <div class="quantity-selector">\n            <button class="quantity-btn">-</button>\n            <input type="text" class="quantity-input" value="${t.quantity}" readonly>\n            <button class="quantity-btn">+</button>\n          </div>\n        </div>\n      </div>\n    `,e}(t);n.appendChild(e)})),e.appendChild(n)}function w(){const t=b().reduce(((t,e)=>t+e.quantity),0);document.querySelectorAll(".cart-count").forEach((e=>{e.textContent=t,e.style.display=t>0?"flex":"none"}))}function b(){try{return(JSON.parse(localStorage.getItem(s))||[]).map((t=>{const e=l(t.variant_id);return{...t,variant_id:e,id:e}}))}catch(t){return console.error("Error parsing cart items",t),[]}}async function C(t){if(!t.variant_id)return void console.error("Cannot add to cart - product missing variant_id",t);const e=l(t.variant_id);if(!e)return void console.error("Invalid variant ID format",t.variant_id);const n=b(),o=n.find((t=>l(t.variant_id)===e));o?o.quantity+=1:n.push({...t,quantity:1,variant_id:e,id:e}),await function(t){try{localStorage.setItem(s,JSON.stringify(t)),g(t),w()}catch(t){console.error("Error saving cart to localStorage",t)}}(n),await S(n),f()}async function S(t){try{if(!await async function(){const t=await fetch("/cart/clear.js",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest"},credentials:"same-origin"});return t.ok?(await t.json(),!0):(console.error("Failed to clear cart",t.status,await t.text()),!1)}())return!1;if(0===t.length)return!0;const e=await async function(t){const e=t.map((t=>({id:l(t.variant_id),quantity:t.quantity,properties:{chatbot_added:!0}}))).filter((t=>t.id));if(0===e.length)return console.error("No valid items to add after filtering"),!1;const n=await fetch("/cart/add.js",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({items:e}),credentials:"same-origin"});return n.ok?(await n.json(),!0):(console.error("Failed to add items to cart",n.status,await n.text()),!1)}(t);return e}catch(t){return console.error("Error syncing cart:",t),!1}}let k=!1;function E(){k||(y(),document.querySelectorAll(".chatbot-cart-icon").forEach((t=>{t.addEventListener("click",(t=>{t.stopPropagation(),f()}))})),k=!0)}function L(t,e,n=[],o){const a=document.querySelector(".message-list");if(!a)return;const r=document.createElement("div");r.className="message-wrapper";const i=function(t,e){const n=document.createElement("div");return n.className=`message ${e}-message`,n.textContent=t,n}(t,e);if(r.appendChild(i),"bot"===e&&n.length>0){const t=c(n,o,(t=>{!function(t){if(!t.variant_id)return console.error("Product missing required variant_id",t),!1;const e=l(t.variant_id);e?C({...t,variant_id:e,image:t.image||"",title:t.title||"",price:t.price||"",quantity:t.quantity}):console.error("Invalid variant ID format",t.variant_id)}({title:t.title,price:t.price,image:t.image,variant_id:t.variant_id||t.id,quantity:1})}));r.appendChild(t)}a.appendChild(r)}function q(t){const e=document.querySelector(".input-box"),o=document.querySelector(".send-button"),a=async()=>{const o=e.value.trim();if(!o)return;L(o,"user",[],t),e.value="";const a=function(t){const e=document.createElement("div");return e.className="typing-indicator",e.innerHTML="\n      <span></span>\n      <span></span>\n      <span></span>\n    ",e.querySelectorAll("span").forEach((e=>{e.style.backgroundColor=t})),e}(t);document.querySelector(".message-list").appendChild(a);try{const{answer:t,products:e}=await async function(t,e){const n=new Headers({"Content-Type":"application/json",Accept:"application/json"}),o=`${r}?shopId=${encodeURIComponent(e)}`,a=await fetch(o,{method:"POST",headers:n,body:JSON.stringify({messages:[{role:"user",content:t}]})});if(!a.ok){const t=await a.json();throw new Error(t.message||"Failed to get bot response")}const c=await a.json();return{answer:c.answer,products:c.products||[]}}(o,d());L(t,"bot",e||[],n)}catch(t){console.error("Chat error:",t),L(t.message||"Sorry, something went wrong.","bot",[],n)}finally{a.remove(),e.focus()}};e.addEventListener("input",(()=>{o.disabled=""===e.value.trim()})),e.addEventListener("keypress",(t=>{"Enter"===t.key&&a()})),o.addEventListener("click",a),setTimeout((()=>{L("Hi there! How can I help you today?","bot",[],n)}),500)}async function N(){const e=await async function(){const e=d();try{const n=await fetch(`/apps/chatbot-api/supabase?shopId=${encodeURIComponent(e)}`);if(!n.ok)throw new Error("Failed to fetch color");return(await n.json()).color||t}catch(e){return console.error("Color fetch error:",e),t}}();return function(t){document.documentElement.style.setProperty("--primary-color",t),[".chatbot-toggle-button",".chatbot-header",".send-button",".start-chat-button",".add-to-cart-button"].forEach((e=>{document.querySelectorAll(e).forEach((e=>{e.style.backgroundColor=t}))})),document.querySelectorAll(".chatbot-window, .email-collection-screen").forEach((e=>{e.style.borderColor=t}))}(e),e}function T(){try{const t=sessionStorage.getItem(i);return t?JSON.parse(t):{}}catch(t){return console.error("Failed to parse session data:",t),{}}}async function I(t){try{const e=(await async function(){try{const t=await fetch(o);return await t.json()}catch(t){return console.error("IP fetch failed:",t),{ip:"unknown"}}}()).ip||"unknown",n=await async function(t){if("unknown"===t)return{country:"unknown",city:"unknown"};try{const e=await fetch(`${a}/${t}/json/`),n=await e.json();return{country:n.country_name||"unknown",city:n.city||"unknown",region:n.region||"unknown"}}catch(t){return console.error("Location fetch failed:",t),{country:"unknown",city:"unknown"}}}(e),r={email:t,ip:e,country:n.country||"unknown",city:n.city||"unknown",region:n.region||"unknown",session_start:(new Date).toISOString(),interactions:0};if(!function(t){try{const e=JSON.stringify({...T(),...t});return sessionStorage.setItem(i,e),!0}catch(t){return console.error("Failed to update session:",t),!1}}(r))throw new Error("Failed to store session");return T()}catch(t){throw console.error("Session initialization failed:",t),t}}function $(){return!!T().email}function x(t,e){const n=document.createElement("div");n.className="chatbot-header",n.style.backgroundColor=t,n.innerHTML=`\n    <h3 class="chatbot-header-title">${e}</h3>\n  `;const o=function(){const t=document.createElement("div");return t.className="chatbot-cart-icon",t.innerHTML='\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <circle cx="9" cy="21" r="1"></circle>\n        <circle cx="20" cy="21" r="1"></circle>\n        <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>\n      </svg>\n      <span class="cart-count">0</span>\n    ',t}();return n.appendChild(o),n}function _(t,e){const n=document.createElement("div");n.className="chat-page";const o=x(e,"Store Assistant");n.appendChild(o);const a=function(){const t=document.createElement("div");return t.className="message-list",t}();n.appendChild(a);const r=function(t){const e=document.createElement("div");return e.className="input-component",e.innerHTML='\n      <input type="text" class="input-box" placeholder="Type your message...">\n      <button class="send-button" disabled>Send</button>\n    ',e.querySelector(".send-button").style.backgroundColor=t,e}(e);return n.appendChild(r),n}function j(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}function H(t,e,n=!1){const o=$()?_(0,e):function(t="Store Assistant",e){const n=document.createElement("div");n.className="email-gate-page",n.innerHTML=`\n    <div class="chatbot-header" style="background-color: ${e}">\n      <h3 class="chatbot-header-title">${t}</h3>\n    </div>\n    <div class="email-collection-content">\n      <p>Please enter your email to start chatting</p>\n      <input type="email" class="email-input" placeholder="Your email address" required>\n      <div class="error-message hidden">Please enter a valid email address</div>\n      <button class="start-chat-button" style="background-color: ${e}">Start Chat</button>\n      <button class="skip-button">Skip</button> \n    </div>\n  `;const o=n.querySelector(".email-input"),a=n.querySelector(".error-message"),r=n.querySelector(".start-chat-button"),c=n.querySelector(".skip-button");return r.addEventListener("click",(async()=>{const t=o.value.trim();if(!j(t))return a.classList.remove("hidden"),void o.focus();try{await I(t),window.chatbotRenderContent&&window.chatbotRenderContent(!0)}catch(t){console.error("Session initialization failed:",t),a.textContent="Failed to start chat. Please try again.",a.classList.remove("hidden")}})),o.addEventListener("input",(()=>{j(o.value.trim())&&a.classList.add("hidden")})),c.addEventListener("click",(async()=>{const t=`Anonymous_${Date.now()}`;await I(t),window.chatbotRenderContent&&window.chatbotRenderContent(!0)})),n}("Store Assistant",e),a=t.querySelector(".chat-page, .email-gate-page");return a&&t.removeChild(a),o.classList.add("hidden"),t.appendChild(o),n&&(o.classList.remove("hidden"),o.classList.add("open")),o}let M=null,P=!1;document.addEventListener("DOMContentLoaded",(async()=>{const n=document.getElementById("shopify-chatbot");if(!n)return void console.error("Chatbot container not found");n.style.setProperty("--primary-color",t),n.style.setProperty("--text-color",e);const o=await N(),a=function(t){const e=document.createElement("button");return e.className="chatbot-toggle-button",e.innerHTML="ðŸ’¬",e.style.backgroundColor=t,e}(o);n.appendChild(a),window.chatbotRenderContent=t=>(M=H(n,o,t),t&&$()&&q(o),M.classList.contains("chat-page")&&E(),M),M=H(n,o,!1),a.addEventListener("click",(()=>{P=!P,P?(M.classList.remove("hidden"),M.classList.add("open"),$()&&(q(o),document.querySelector(".input-box")?.focus()),M.classList.contains("chat-page")&&E()):(M.classList.remove("open"),M.classList.add("hidden")),a.innerHTML=P?"x":"ðŸ’¬"})),function(){const t=d();window.addEventListener("beforeunload",(()=>{const e=JSON.parse(sessionStorage.getItem(i));e&&navigator.sendBeacon(`/apps/chatbot-api/store-session?shopId=${encodeURIComponent(t)}`,JSON.stringify(e))}))}()}))}();
