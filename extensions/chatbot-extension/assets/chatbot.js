!function(){"use strict";const t="#008080",e="#f8f8f8",n="#333",o="https://api.ipify.org?format=json",r="https://ipapi.co",a="/apps/chatbot-api/agent_conversation",s="/apps/chatbot-api/analytics",i="/cart/clear.js",c="/cart/add.js",l="/cart.js",d="gid://shopify/ProductVariant/";let u=[];const p="chatbotCartItems",m="chatbotSessionData";function h(){try{const t=sessionStorage.getItem(m);return t?JSON.parse(t):{}}catch(t){return console.error("Failed to parse session data:",t),{}}}function y(t=[]){conversationHistory=t,0===t.length?sessionStorage.removeItem("conversationHistory"):sessionStorage.setItem("conversationHistory",JSON.stringify(conversationHistory))}function g(t="white"){const e=document.createElement("div");return e.className="circular-loader",e.style.borderTopColor=t,e.innerHTML=`\n    <svg class="circular-loader-svg" viewBox="25 25 50 50">\n      <circle \n        class="loader-path" \n        cx="50" \n        cy="50" \n        r="20" \n        fill="none" \n        stroke="${t}"\n        stroke-width="3" \n        stroke-miterlimit="10"\n      />\n    </svg>\n  `,e}function f(t,e,n){document.createElement("div").className="product-slider-container";const o=document.createElement("div");if(o.className="product-slider",t.slice(0,4).forEach((t=>{const r=function(t,e){const n=document.createElement("div");n.className="product-card",n.innerHTML=`\n      <img src="${t.image}" class="product-image">\n      <div class="product-title">${t.title}</div>\n      <div class="product-price">${t.price}</div>\n      <a href="${t.url}" class="view-product-button">View</a>\n      <button class="add-to-cart-button">Add to Cart</button>\n    `;const o=n.querySelector(".add-to-cart-button");return o.style.backgroundColor=e,o.addEventListener("click",(async e=>{e.preventDefault(),o.disabled=!0;const r=g();r.classList.add("button-loader"),o.appendChild(r),o.innerHTML="",o.appendChild(r);try{await new Promise((e=>{n.dispatchEvent(new CustomEvent("addToCart",{detail:t,bubbles:!0,composed:!0})),setTimeout(e,1e3)}))}finally{o.removeChild(r),o.innerHTML="Add to Cart",o.disabled=!1}})),n}(t,e);r.addEventListener("addToCart",(t=>{t.stopPropagation(),n(t.detail)})),o.appendChild(r)})),t.length>0){const t=document.createElement("div");t.className="see-more-container";const n=document.createElement("button");n.className="see-more-button",n.textContent="See More",n.style.backgroundColor=e,n.addEventListener("click",(()=>{window.location.href="/"})),t.appendChild(n),o.appendChild(t)}return o}function v(){return window.Shopify?.shop||"default-shop-id"}function w(t){return t?"string"==typeof t&&t.startsWith("gid://shopify/ProductVariant/")?parseInt(t.split("/").pop(),10):parseInt(t,10)||null:null}function b(t,e){return t.length===e.length&&t.every(((t,n)=>t.id===e[n].id&&t.qty===e[n].qty))}async function S(){const t=await fetch(l,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest"},credentials:"same-origin"});return t.ok?await t.json():(console.error("Failed to get cart",t.status,await t.text()),null)}let C=null,E=null,L=null,q=!1;function k(){E||(E=function(){const t=document.createElement("div");return t.className="cart-drawer",t.innerHTML='\n      <div class="cart-drawer-header">\n        <h3 class="cart-drawer-title">Added to Cart</h3>\n        <button class="cart-drawer-close">Ã—</button>\n      </div>\n      <div class="cart-drawer-content"></div>\n      <button class="checkout-button">Checkout</button>\n    ',t.style.display="none",t}());const t=document.querySelector(".chat-page");t&&t!==L&&(E.parentNode&&E.parentNode.removeChild(E),t.appendChild(E),L=t,E.querySelector(".cart-drawer-close").addEventListener("click",N),E.querySelector(".checkout-button").addEventListener("click",(async t=>{t.preventDefault();const e=t.target,n=e.textContent,o=g();e.innerHTML="",e.appendChild(o),e.disabled=!0;try{const t=H();await x(t)?window.location.href="/cart":alert("Failed to sync cart. Please try again.")}catch(t){console.error("Checkout error:",t),alert("An error occurred during checkout.")}finally{e.removeChild(o),e.textContent=n,e.disabled=!1}})))}function _(){k(),T(H()),$(),function(){document.addEventListener("cart:requestComplete",(t=>j(t))),document.addEventListener("cart:updated",(t=>j(t))),document.addEventListener("cart:change",(t=>j(t)));let t=null,e=0;setInterval((async()=>{try{const n=await S(),o=n?.item_count||0;n?.token===t&&o===e||(t=n?.token,e=o,j({detail:{response:n}}))}catch(t){console.error("Error polling cart:",t)}}),8e3)}()}function I(){k(),E.style.display="block",E.classList.add("open"),E.classList.remove("auto-close"),function(){C&&clearTimeout(C);C=setTimeout(N,5e3)}()}function N(){E&&(E.classList.remove("open"),E.classList.add("auto-close"))}function T(t){k();const e=E.querySelector(".cart-drawer-content");if(e.innerHTML="",0===t?.length||!t?.length)return void(e.innerHTML="<p>Your cart is empty</p>");const n=document.createDocumentFragment();t.forEach((t=>{const e=function(t){const e=document.createElement("div");return e.className="cart-item",e.innerHTML=`\n      <img src="${t.image}" alt="${t.title}" class="cart-item-image">\n      <div class="cart-item-details">\n        <h4 class="cart-item-title">${t.title}</h4>\n        <p class="cart-item-price">${t.price}</p>\n        <div class="cart-item-actions">\n          <div class="quantity-selector">\n            <button class="quantity-btn minus">-</button>\n            <input type="text" class="quantity-input" value="${t.quantity}" readonly>\n            <button class="quantity-btn plus">+</button>\n          </div>\n        </div>\n      </div>\n    `,e}(t);!function(t,e){t.querySelector(".minus").addEventListener("click",(()=>{M(e,-1),trackEvent("products_added_to_cart",{cart_items:H()})})),t.querySelector(".plus").addEventListener("click",(()=>{M(e,1),trackEvent("products_added_to_cart",{cart_items:H()})}))}(e,t),n.appendChild(e)})),e.appendChild(n)}function $(){const t=H().reduce(((t,e)=>t+e.quantity),0);document.querySelectorAll(".cart-count").forEach((e=>{e.textContent=t,e.style.display=t>0?"flex":"none"}))}function H(){try{return(JSON.parse(localStorage.getItem(p))||[]).map((t=>{const e=w(t.variant_id);return{...t,variant_id:e,id:e}}))}catch(t){return console.error("Error parsing cart items",t),[]}}async function M(t,e=1){if(!t.variant_id)return alert("Cannot add to cart, due to some technical issues"),void console.error("Cannot add to cart - product missing variant_id",t);const n=w(t.variant_id);if(!n)return void console.error("Invalid variant ID format",t.variant_id);const o=H(),r=o.find((t=>w(t.variant_id)===n));r?(r.quantity+=e,r.quantity>10&&(r.quantity=10),r.quantity<=0&&o.splice(o.indexOf(r),1)):e>0&&o.push({...t,quantity:Math.min(e,10),variant_id:n,id:n,properties:t.properties||{chatbot_added:!0}}),await O(o),await x(o),I()}async function x(t){if(q)return!0;q=!0;const e=document.querySelectorAll(".chatbot-cart-icon");e.forEach((t=>{t.classList.add("cart-icon-hidden")}));try{const e=await S(),n=e?.items||[];if(!!b(t.map((t=>({id:t.id,qty:t.quantity}))),n.map((t=>({id:t.id,qty:t.quantity})))))return!0;if(!await async function(){const t=await fetch(i,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest"},credentials:"same-origin"});return t.ok?(await t.json(),!0):(console.error("Failed to clear cart",t.status,await t.text()),!1)}())return!1;if(0===t.length)return!0;const o=await async function(t){const e=t.map((t=>({id:w(t.variant_id),quantity:t.quantity,properties:{chatbot_added:!0}}))).filter((t=>t.id));if(0===e?.length||!e?.length)return console.error("No valid items to add after filtering"),!1;const n=await fetch(c,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify({items:e}),credentials:"same-origin"});return n.ok?(await n.json(),!0):(console.error("Failed to add items to cart",n.status,await n.text()),!1)}(t);return o}catch(t){return console.error("Error syncing cart:",t),!1}finally{e.forEach((t=>{t.classList.remove("cart-icon-hidden")})),isSyncing=!1}}function O(t){try{localStorage.setItem(p,JSON.stringify(t)),T(t),$()}catch(t){console.error("Error saving cart to localStorage",t)}}async function j(t){try{const e=t.detail?.response||await S();e&&await async function(t){if(isCartSyncInProgress)return;const e=t.items.map((t=>({id:t.id,variant_id:`${d}${t.id}`,title:t.title,price:t.price,image:t.image,quantity:t.quantity,properties:t.properties||{}}))),n=H().map((t=>({id:t.id,qty:t.quantity})));b(e.map((t=>({id:t.id,qty:t.quantity}))),n)||(console.log("Cart changed in store, updating local cart"),O(e))}(e)}catch(t){console.error("Error handling cart update:",t)}}function A(t,e={}){const n=JSON.parse(sessionStorage.getItem(m))||{};n[t]=(n[t]||0)+1,n.last_activity=(new Date).toISOString(),n.total_chat_interactions||(n.total_chat_interactions=0),(t.includes("message")||t.includes("chat"))&&(n.total_chat_interactions+=1),Object.assign(n,e),sessionStorage.setItem(m,JSON.stringify(n))}let J=!1;function P(){J||(_(),document.querySelectorAll(".chatbot-cart-icon").forEach((t=>{t.addEventListener("click",(t=>{t.stopPropagation(),I()}))})),J=!0)}let D=null,W=!1,R=[],F=0;async function z(t,e){D&&B();try{const n="red-melons-love.loca.lt",o="wss";console.log("Protocol:",o);const r=`${o}://${n}/ws/conversation/${encodeURIComponent(t)}/${e}`;console.log("wsUrl:",r),D=new WebSocket(r),D.onopen=()=>{for(console.log("WebSocket connection established"),W=!0,F=0;R.length>0;){X(R.shift())}},D.onmessage=t=>{try{const e=JSON.parse(t.data);console.log("WebSocket message received:",e),"conversation_stored"===e.type&&(e.success?console.log(`Conversation stored successfully with ID: ${e.conversation_id}`):console.error(`Failed to store conversation: ${e.error}`))}catch(t){console.error("Error processing WebSocket message:",t)}},D.onclose=n=>{if(console.log("WebSocket connection closed:",n),W=!1,F<5){F++;const n=Math.min(1e3*F,5e3);console.log(`Attempting to reconnect in ${n}ms (attempt ${F})`),setTimeout((()=>z(t,e)),n)}},D.onerror=t=>{console.error("WebSocket error:",t)}}catch(n){if(console.error("Error initializing WebSocket:",n),F<5){F++;const n=Math.min(1e3*F,5e3);console.log(`Error connecting. Retrying in ${n}ms (attempt ${F})`),setTimeout((()=>z(t,e)),n)}}}function X(t){W&&D?D.send(JSON.stringify(t)):R.push(t)}function B(){D&&(D.close(),D=null,W=!1)}function U(t,e,n=[],o){const r=document.querySelector(".message-list");if(!r)return;const a=document.createElement("div");a.className="message-wrapper";const s=function(t,e){const n=document.createElement("div");return n.className=`message ${e}-message`,n.innerHTML=function(t){const e=(t=t.replace(/Ã¢â‚¬Â¢/g,"â€¢")).split("\n");let n="",o=!1,r="";for(let t=0;t<e.length;t++){const a=e[t].trim();if(""===a&&t>0&&t<e.length-1){const n=e[t-1].trim(),o=e[t+1].trim();if(n.startsWith("â€¢")&&o.startsWith("â€¢"))continue}a.startsWith("â€¢")?(r&&!o&&(n+=`<p>${r}</p>`,r=""),o||(n+='<ul class="message-list-items">',o=!0),n+=`<li>${a.substring(1).trim()}</li>`):(o&&(n+="</ul>",o=!1),a?r?r+=" "+a:r=a:r&&(n+=`<p>${r}</p>`,r=""))}return o&&(n+="</ul>"),r&&(n+=`<p>${r}</p>`),n}(t),n}(t,e);if(a.appendChild(s),"bot"===e&&n.length>0){const t=f(n,o,(t=>{!function(t){if(!t.variant_id)return console.error("Product missing required variant_id",t),!1;const e=w(t.variant_id);e?(M({...t,variant_id:e,image:t.image||"",title:t.title||"",price:t.price||"",quantity:t.quantity,source:"chatbot"}),A("products_added_to_cart",{cart_items:H()})):console.error("Invalid variant ID format",t.variant_id)}({title:t.title,price:t.price,image:t.image,variant_id:t.variant_id||t.id,quantity:1})}));a.appendChild(t)}if(r.appendChild(a),!window.isLoadingHistory&&(function(t,e,n){try{const o=JSON.parse(sessionStorage.getItem("chatMessages")||"[]");o.push({text:t,sender:e,products:n,timestamp:(new Date).toISOString()}),sessionStorage.setItem("chatMessages",JSON.stringify(o))}catch(t){console.error("Error saving message to session storage:",t)}}(t,e,n),"bot"===e)){const e=JSON.parse(sessionStorage.getItem("chatMessages")||"[]");if(e.length>=2){const n=e.filter((t=>"user"===t.sender)).pop();n&&X({type:"store_conversation",user_query:n.text,agent_response:t})}}}let V=!1;function G(t){const e=sessionStorage.getItem("conversationHistory");if(e)try{y(JSON.parse(e))}catch(t){console.error("Error parsing conversation history:",t),y()}else y();const o=document.querySelector(".input-box"),r=document.querySelector(".send-button"),s=v(),i=JSON.parse(sessionStorage.getItem("chatbotSessionData")||"{}").email;console.log("Initializing WebSocket with:",{shopId:s,userId:i}),z(s,i),window.addEventListener("beforeunload",(()=>{B()})),function(t){if(!V)try{const e=sessionStorage.getItem("chatMessages");e&&(window.isLoadingHistory=!0,JSON.parse(e).forEach((e=>{U(e.text,e.sender,e.products||[],"user"===e.sender?t:n)})),window.isLoadingHistory=!1,V=!0)}catch(t){window.isLoadingHistory=!1,console.error("Error loading chat history from session storage:",t)}}(t);const c=async e=>{const r=e||o.value.trim();if(!r)return;e||(o.value=""),A("interactions",{}),U(r,"user",[],t),o.value="";const s=function(t){const e=document.createElement("div");return e.className="typing-indicator",e.innerHTML="\n      <span></span>\n      <span></span>\n      <span></span>\n    ",e.querySelectorAll("span").forEach((e=>{e.style.backgroundColor=t})),e}(t);document.querySelector(".message-list").appendChild(s);try{const{answer:t,products:e}=await async function(t,e){const n=new AbortController,o=setTimeout((()=>n.abort()),6e4),r=new Headers({"Content-Type":"application/json",Accept:"application/json"}),s={id:u.length,user:t,agent:"",timestamp:(new Date).toISOString()};u.push(s),sessionStorage.setItem("conversationHistory",JSON.stringify(u));const i=`${a}?shopId=${encodeURIComponent(e)}`;try{const t=await fetch(i,{method:"POST",headers:r,body:JSON.stringify({messages:u}),signal:n.signal});if(clearTimeout(o),!t.ok){const e=await t.json();throw new Error(e.message||"Failed to get bot response")}const e=await t.json();return u.length>0&&(u[u.length-1].agent=e.answer,u[u.length-1].timestamp=(new Date).toISOString(),sessionStorage.setItem("conversationHistory",JSON.stringify(u))),{answer:e.answer,products:e.products||[],history:e.hisory||u}}catch(t){throw clearTimeout(o),"AbortError"===t.name?new Error("Request timed out. Please try again."):t}}(r,v());U(t,"bot",e||[],n)}catch(t){console.error("Chat error:",t),U("Sorry, something went wrong! Can you please try again later.","bot",[],n)}finally{s.remove(),o.focus()}};window.sendChatMessage=c,o.addEventListener("input",(()=>{r.disabled=""===o.value.trim()})),o.addEventListener("keypress",(t=>{"Enter"===t.key&&c()})),r.addEventListener("click",c)}async function Y(){const e=await async function(){const e=v();try{const n=await fetch(`/apps/chatbot-api/color-preference?shopId=${encodeURIComponent(e)}`);if(!n.ok)throw new Error("Failed to fetch color");return(await n.json()).color||t}catch(e){return console.error("Color fetch error:",e),t}}();return function(t){document.documentElement.style.setProperty("--primary-color",t),[".chatbot-toggle-button",".chatbot-header",".send-button",".start-chat-button",".add-to-cart-button"].forEach((e=>{document.querySelectorAll(e).forEach((e=>{e.style.backgroundColor=t}))})),document.querySelectorAll(".chatbot-window, .email-collection-screen").forEach((e=>{e.style.borderColor=t}))}(e),e}async function K(t){try{const e=(await async function(){try{const t=await fetch(o);return await t.json()}catch(t){return console.error("IP fetch failed:",t),{ip:null}}}()).ip||"unknown",n=await async function(t){if("unknown"===t)return{country:"unknown",city:null,region:null};try{const e=await fetch(`${r}/${t}/json/`),n=await e.json();return{country:n.country_name||null,city:n.city||null,region:n.region||null}}catch(t){return console.error("Location fetch failed:",t),{country:null,city:null,region:null}}}(e),a={email:t,ip:e,country:n.country||"unknown",city:n.city||"unknown",region:n.region||"unknown",session_start:(new Date).toISOString(),interactions:0,total_chat_interactions:0,products_added_to_cart:0,cart_items:[]};if(!function(t){try{const e=JSON.stringify({...h(),...t});return sessionStorage.setItem(m,e),!0}catch(t){return console.error("Failed to update session:",t),!1}}(a))throw new Error("Failed to store session");return h()}catch(t){throw console.error("Session initialization failed:",t),t}}function Q(){return!!h().email}function Z(t,e){const n=document.createElement("div");n.className="chatbot-header",n.style.backgroundColor=t,n.innerHTML=`\n    <h3 class="chatbot-header-title">${e}</h3>\n  `;const o=function(){const t=document.createElement("div");return t.className="chatbot-cart-icon",t.innerHTML='\n      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n        <circle cx="9" cy="21" r="1"></circle>\n        <circle cx="20" cy="21" r="1"></circle>\n        <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>\n      </svg>\n      <span class="cart-count">0</span>\n    ',t}();return n.appendChild(o),n}function tt(t,e,n){const o=document.createElement("div");o.className="chat-page";const r=Z(e,"Store Assistant");o.appendChild(r);const a=document.createElement("div");a.className="chat-content";const s=function(){const t=document.createElement("div");return t.className="message-list",t}();a.appendChild(s),o.appendChild(a);const i=function(t,e){const n=document.createElement("div");return n.className="user-query-slider",t.forEach((t=>{const o=document.createElement("button");o.className="user-query-button",o.innerText=t,o.onclick=()=>e(t),n.appendChild(o)})),n}(n,(t=>{"function"==typeof window.sendChatMessage&&window.sendChatMessage(t)})),c=function(t){const e=document.createElement("div");return e.className="input-component",e.innerHTML='\n      <input type="text" class="input-box" placeholder="Type your message...">\n      <button class="send-button" disabled>Send</button>\n    ',e.querySelector(".send-button").style.backgroundColor=t,e}(e);return o.appendChild(i),o.appendChild(c),o}function et(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}const nt=["What is the return policy?","How can I track my order?","What are the payment methods?","How do I contact customer support?"];function ot(t,e,n=!1){const o=Q()?tt(0,e,nt):function(t="Store Assistant",e){const n=document.createElement("div");n.className="email-gate-page",n.innerHTML=`\n    <div class="chatbot-header" style="background-color: ${e}">\n      <h3 class="chatbot-header-title">${t}</h3>\n    </div>\n    <div class="email-collection-content">\n      <p>\n        To get started with our chat assistant, please enter your email address. This helps us \n        personalize your experience\n      </p>\n      <input \n        type="email" \n        class="email-input" \n        placeholder="Your email address" \n        required\n        aria-label="Email address"\n        aria-describedby="email-error"\n        >\n      <div id="email-error" class="error-message hidden">Please enter a valid email address</div>\n      <button class="start-chat-button" style="background-color: ${e}">Continue to Chat</button>\n      <button class="skip-button">Continue as Guest</button> \n    </div>\n  `;const o=n.querySelector(".email-input"),r=n.querySelector(".error-message"),a=n.querySelector(".start-chat-button"),s=n.querySelector(".skip-button");return a.addEventListener("click",(async()=>{const t=o.value.trim();if(!et(t))return r.classList.remove("hidden"),void o.focus();const e=a.textContent,n=g();a.innerHTML="",a.appendChild(n),a.disabled=!0;try{await K(t),window.chatbotRenderContent&&window.chatbotRenderContent(!0)}catch(t){console.error("Session initialization failed:",t),r.textContent="Failed to start chat. Please try again.",r.classList.remove("hidden"),a.removeChild(n),a.textContent=e,a.disabled=!1}})),o.addEventListener("input",(()=>{et(o.value.trim())&&r.classList.add("hidden")})),s.addEventListener("click",(async()=>{const t=s.textContent,e=g("black");s.innerHTML="",s.appendChild(e),s.disabled=!0;try{const t=`Anonymous_${Date.now()}`;await K(t),window.chatbotRenderContent&&window.chatbotRenderContent(!0)}catch(n){console.error("Session initialization failed:",n),s.removeChild(e),s.textContent=t,s.disabled=!1}})),n}("Store Assistant",e),r=t.querySelector(".chat-page, .email-gate-page");return r&&t.removeChild(r),o.classList.add("hidden"),t.appendChild(o),n&&(o.classList.remove("hidden"),o.classList.add("open")),o}let rt=null,at=!1;document.addEventListener("DOMContentLoaded",(async()=>{const n=document.getElementById("shopify-chatbot");if(!n)return void console.error("Chatbot container not found");const o=g();n.appendChild(o),n.style.setProperty("--primary-color",t),n.style.setProperty("--text-color",e);const r=await Y();n.removeChild(o);const a=function(t){const e=document.createElement("button");return e.className="chatbot-toggle-button",e.innerHTML="ðŸ’¬",e.style.backgroundColor=t,e}(r);n.appendChild(a),window.chatbotRenderContent=t=>(rt=ot(n,r,t),t&&Q()&&G(r),rt.classList.contains("chat-page")&&P(),rt),rt=ot(n,r,!1),a.addEventListener("click",(()=>{at=!at,at?(rt.classList.remove("hidden"),rt.classList.add("open"),Q()&&(G(r),document.querySelector(".input-box")?.focus()),rt.classList.contains("chat-page")&&P()):(rt.classList.remove("open"),rt.classList.add("hidden")),a.innerHTML=at?"x":"ðŸ’¬"})),function(){const t=v();console.log("Shop ID:",t),window.addEventListener("beforeunload",(()=>{const e=JSON.parse(sessionStorage.getItem(m));if(e){const n={type:"application/json"},o=new Blob([JSON.stringify({shopId:t,sessionData:e})],n);navigator.sendBeacon(`${s}`,o)}}))}()}))}();
